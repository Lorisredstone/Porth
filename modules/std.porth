macro not dup nand end
macro yes not not end
macro and nand not end
macro nor not over not nand not end
macro or not over not nand end
macro xor over over or rot and not and end
macro xnor xor not end
macro % div odrop end
macro / div drop end
macro bool 0 = not end
macro negate 0 swap - end
macro show dup . end
macro even 2 % 0 = end
macro odd 2 % 1 = end
macro pair even end
macro impair odd end
macro False false end
macro True true end
macro space "\N \N" print end
macro dup2 2dup end

macro print . end
macro printl print newline end
macro showl show newline end
macro newline "\n" print end
macro endl newline end
macro \n endl end

macro gray    "\033[90m" print print "\033[0m" print end
macro red     "\033[91m" print print "\033[0m" print end
macro green   "\033[92m" print print "\033[0m" print end
macro yellow  "\033[93m" print print "\033[0m" print end
macro blue    "\033[94m" print print "\033[0m" print end
macro magenta "\033[95m" print print "\033[0m" print end
macro cyan    "\033[96m" print print "\033[0m" print end
macro white   "\033[97m" print print "\033[0m" print end
macro warning "[warning] "    yellow yellow          end
macro error   "[error] "      red    red             end

macro grayl     gray    newline end
macro redl      red     newline end
macro greenl    green   newline end
macro yellowl   yellow  newline end
macro bluel     blue    newline end
macro magental  magenta newline end
macro cyanl     cyan    newline end
macro whitel    white   newline end
macro warningl  warning newline end
macro errorl    error   newline end

macro swap rot2 end

macro set @= end
macro set_copy over swap @= end
macro get @! end
macro var_to_int dup get rot rot end
macro var_add var_to_int + swap set end
macro var_mul var_to_int * swap set end
macro var_sub var_to_int - swap set end
macro var_div var_to_int / swap set end
macro var_mod var_to_int % swap set end

macro for dup2 > end
macro for0 0 for end
macro endfor 1 + dup2 > end

macro 2var_get get swap get swap end
macro 2var_add 2var_get + end
macro 2var_sub 2var_get - end
macro 2var_mul 2var_get * end
macro 2var_div 2var_get / end
macro 2var_mod 2var_get % end

macro odrop swap drop end